////////////////////////////////////////

1. Trzeba by się zastanowić czy nie wrzucić dostępu do wszystkich repo do jednej klasy - Fasada?
   Idea jest taka aby moduł mógł korzystać z Infrastructure.Repository.FacadeRepository.[Repository]

////////////////////////////////////////


public class FacadeRepository
{

	public class CustomerRepository : GenericRepository<Customer, ERServiceDbContext>, ICustomerRepository
    {
        public CustomerRepository(ERServiceDbContext context) : base(context)
        {

        }

        public override async Task<Customer> GetByIdAsync(Guid id)
        {
            return await Context.Set<Customer>().Include(a => a.CustomerAddresses).SingleAsync(c => c.Id == id);
        }               

        public override async Task<IEnumerable<Customer>> GetAllAsync()
        {
            return await Context.Set<Customer>().ToListAsync();
        }
        
    }

	public class HardwareRepository : GenericRepository<Hardware, ERServiceDbContext>, IHardwareRepository
    {
        public HardwareRepository(ERServiceDbContext context) : base(context)
        {
        }

        public override Task<IEnumerable<Hardware>> GetAllAsync()
        {
            return base.GetAllAsync();
        }

        public override Task<Hardware> GetByIdAsync(Guid id)
        {
            return base.GetByIdAsync(id);
        }
    }

}